<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jdy.b2b.api.dao.orderOffline.OrderOfflineMapper">
  <resultMap id="BaseResultMap" type="com.jdy.b2b.api.model.orderOffline.OrderOffline">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="order_id" jdbcType="BIGINT" property="orderId" />
    <result column="pay_id" jdbcType="BIGINT" property="payId" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="f_status" jdbcType="INTEGER" property="fStatus" />
    <result column="money" jdbcType="DECIMAL" property="money" />
    <result column="upload_desc" jdbcType="VARCHAR" property="uploadDesc" />
    <result column="trans_no" jdbcType="VARCHAR" property="transNo" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="create_user" jdbcType="BIGINT" property="createUser" />
    <result column="upload_time" jdbcType="TIMESTAMP" property="uploadTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user" jdbcType="BIGINT" property="updateUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, order_id, pay_id, url, f_status, money,upload_desc, trans_no, type, create_user, create_time,
    update_user, update_time,upload_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sl_order_offline
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectByPayId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sl_order_offline
    where pay_id = #{payId,jdbcType=BIGINT} and f_status = 2
  </select>
  <select id="selectByOrderId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sl_order_offline
    where order_id = #{orderId,jdbcType=BIGINT}  and f_status = 2
  </select>
  <select id="selectByEntity" parameterType="com.jdy.b2b.api.model.orderOffline.OrderOffline" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sl_order_offline
	<include refid="fullWhere"/>
	order by id ASC
  </select>

  <resultMap id="OrderPayOfflineDtoMap" type="com.jdy.b2b.api.model.diy.OrderPayOfflineDto">
    <result property="createTime" column="create_time"/>
    <result property="money" column="money"/>
    <result property="status" column="f_status"/>
    <result property="url" column="url"/>
    <result property="uploadDesc" column="upload_desc"/>
  </resultMap>
  <select id="selectOrderPayOfflineDtoByOrderId" resultMap="OrderPayOfflineDtoMap">
    select
    <include refid="Base_Column_List" />
    from sl_order_offline
    where order_id = #{orderId,jdbcType=BIGINT}  and f_status != 2
  </select>

  <select id="selectMaxMoney"  resultType="decimal">
    select sum(money) from sl_order_offline  where order_id = #{orderId} and `type`=#{type} and f_status != 1
  </select>
  <select id="getExistRecordByIds"  resultType="int">
    select count(id) from sl_order_offline  where order_id = #{orderId} and `type`=2 and f_status = 0 
    and id not in 
    <foreach collection="list" open="(" close=")" separator="," item="t">#{t}</foreach>
    
  </select>

  <select id="selectSumFirstPay" parameterType="long" resultType="HashMap">
    SELECT
	sum(money) sumMoney
    FROM sl_order_offline
    where order_id = #{id}
    and f_status = 0
  </select>

  <sql id="fullWhere">
  	<where>
	 <if test="orderId != null">
       AND order_id = #{orderId,jdbcType=BIGINT}
      </if>
      <if test="payId != null">
       AND pay_id = #{payId,jdbcType=BIGINT}
      </if>
      <if test="url != null">
       AND url = #{url,jdbcType=VARCHAR}
      </if>
      <if test="fStatus != null">
       AND f_status = #{fStatus,jdbcType=INTEGER}
      </if>
      <if test="money != null">
       AND money = #{money,jdbcType=DECIMAL}
      </if>
      <if test="transNo != null">
       AND trans_no = #{transNo,jdbcType=VARCHAR}
      </if>
      <if test="type != null">
       AND type = #{type,jdbcType=INTEGER}
      </if>
      <if test="createUser != null">
       AND create_user = #{createUser,jdbcType=BIGINT}
      </if>
      <if test="updateUser != null">
       AND update_user = #{updateUser,jdbcType=BIGINT}
      </if>
	</where>
  </sql>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sl_order_offline
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.jdy.b2b.api.model.orderOffline.OrderOffline" keyProperty="id" useGeneratedKeys="true">
    insert into sl_order_offline (id, order_id, pay_id,
      url, f_status, money,upload_desc,
      trans_no, type, create_user,
      create_time, update_user, update_time
      )
    values (#{id,jdbcType=BIGINT}, #{orderId,jdbcType=BIGINT}, #{payId,jdbcType=BIGINT},
      #{url,jdbcType=VARCHAR}, #{fStatus,jdbcType=INTEGER}, #{money,jdbcType=DECIMAL},#{uploadDesc,jdbcType=VARCHAR},
      #{transNo,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, #{createUser,jdbcType=BIGINT},
      #{createTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=BIGINT}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jdy.b2b.api.model.orderOffline.OrderOffline">
    insert into sl_order_offline
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="payId != null">
        pay_id,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="fStatus != null">
        f_status,
      </if>
      <if test="money != null">
        money,
      </if>
      <if test="uploadDesc != null">
        upload_desc,
      </if>
      <if test="transNo != null">
        trans_no,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="uploadTime != null">
        upload_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="payId != null">
        #{payId,jdbcType=BIGINT},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="fStatus != null">
        #{fStatus,jdbcType=INTEGER},
      </if>
      <if test="money != null">
        #{money,jdbcType=DECIMAL},
      </if>
      <if test="uploadDesc != null">
        #{uploadDesc,jdbcType=VARCHAR},
      </if>
      <if test="transNo != null">
        #{transNo,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="uploadTime != null">
        #{uploadTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jdy.b2b.api.model.orderOffline.OrderOffline">
    update sl_order_offline
    <set>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=BIGINT},
      </if>
      <if test="payId != null">
        pay_id = #{payId,jdbcType=BIGINT},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="fStatus != null">
        f_status = #{fStatus,jdbcType=INTEGER},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=DECIMAL},
      </if>
      <if test="uploadDesc != null">
        upload_desc = #{uploadDesc,jdbcType=VARCHAR},
      </if>
      <if test="transNo != null">
        trans_no = #{transNo,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="uploadTime != null">
        upload_time = #{uploadTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jdy.b2b.api.model.orderOffline.OrderOffline">
    update sl_order_offline
    set order_id = #{orderId,jdbcType=BIGINT},
      pay_id = #{payId,jdbcType=BIGINT},
      url = #{url,jdbcType=VARCHAR},
      f_status = #{fStatus,jdbcType=INTEGER},
      money = #{money,jdbcType=DECIMAL},
      upload_desc = #{uploadDesc,jdbcType=VARCHAR},
      trans_no = #{transNo,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      upload_time = #{uploadTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>