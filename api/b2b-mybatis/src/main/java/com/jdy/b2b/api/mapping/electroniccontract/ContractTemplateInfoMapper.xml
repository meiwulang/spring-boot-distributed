<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jdy.b2b.api.dao.electroniccontract.ContractTemplateInfoMapper" >
  <resultMap id="BaseResultMap" type="com.jdy.b2b.api.model.electroniccontract.ContractTemplateInfo" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="template_title" property="templateTitle" jdbcType="VARCHAR" />
    <result column="template_no" property="templateNo" jdbcType="CHAR" />
    <result column="company_id" property="companyId" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_user" property="createUser" jdbcType="BIGINT" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, template_title, template_no, company_id, create_time, create_user, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select
    <include refid="Base_Column_List" />
    from sm_contract_template_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from sm_contract_template_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.jdy.b2b.api.model.electroniccontract.ContractTemplateInfo" >
    insert into sm_contract_template_info (id, template_title, template_no,
    company_id, create_time, create_user,
    update_time)
    values (#{id,jdbcType=BIGINT}, #{templateTitle,jdbcType=VARCHAR}, #{templateNo,jdbcType=CHAR},
    #{companyId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=BIGINT},
    #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.jdy.b2b.api.model.electroniccontract.ContractTemplateInfo" >
    insert into sm_contract_template_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="templateTitle != null" >
        template_title,
      </if>
      <if test="templateNo != null" >
        template_no,
      </if>
      <if test="companyId != null" >
        company_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="templateTitle != null" >
        #{templateTitle,jdbcType=VARCHAR},
      </if>
      <if test="templateNo != null" >
        #{templateNo,jdbcType=CHAR},
      </if>
      <if test="companyId != null" >
        #{companyId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jdy.b2b.api.model.electroniccontract.ContractTemplateInfo" >
    update sm_contract_template_info
    <set >
      <if test="templateTitle != null" >
        template_title = #{templateTitle,jdbcType=VARCHAR},
      </if>
      <if test="templateNo != null" >
        template_no = #{templateNo,jdbcType=CHAR},
      </if>
      <if test="companyId != null" >
        company_id = #{companyId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jdy.b2b.api.model.electroniccontract.ContractTemplateInfo" >
    update sm_contract_template_info
    set template_title = #{templateTitle,jdbcType=VARCHAR},
      template_no = #{templateNo,jdbcType=CHAR},
      company_id = #{companyId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <resultMap id="TempListResultMap" type="com.jdy.b2b.api.model.electroniccontract.ContractTemplateInfoExt" extends="BaseResultMap">
    <result property="pid" column="pid"/>
  </resultMap>
  <select id="searchTmpList" resultMap="TempListResultMap">
    SELECT ct.*, pct.pid from sm_contract_template_info ct
    LEFT JOIN ct_product_contract_template pct on ct.id=pct.t_id
    <where>
      <if test="str != null and str != ''">
        AND CONCAT(IFNULL(ct.template_title,''),IFNULL(ct.template_no,'')) like
        CONCAT('%',#{str},'%')
      </if>
      <if test="puDataLimit != 3">AND ct.company_id = #{pcompanyId}</if>
      <if test="puDataLimit == 3">
        <if test="companyId != null">AND ct.company_id = #{companyId}</if>
      </if>
    </where>
    GROUP BY ct.id
  </select>

  <select id="prodTmpList" resultMap="TempListResultMap">
    SELECT ct.*, pct.pid from sm_contract_template_info ct
    LEFT JOIN ct_product_contract_template pct on ct.id=pct.t_id
    <where>
      <if test="str != null and str != ''">
        AND CONCAT(IFNULL(ct.template_title,''),IFNULL(ct.template_no,'')) like
        CONCAT('%',#{str},'%')
      </if>
      AND ct.company_id = #{pcompanyId}
    </where>
    GROUP BY ct.id
  </select>
</mapper>