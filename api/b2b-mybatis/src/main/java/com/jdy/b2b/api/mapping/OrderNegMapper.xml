<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jdy.b2b.api.dao.OrderNegMapper">
  <resultMap id="BaseResultMap" type="com.jdy.b2b.api.model.OrderNeg">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="order_id" jdbcType="BIGINT" property="orderId" />
    <result column="neg_order_id" jdbcType="BIGINT" property="negOrderId" />
    <result column="neg_order_no" jdbcType="VARCHAR" property="negOrderNo" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="create_user" jdbcType="BIGINT" property="createUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, order_id, neg_order_id,neg_order_no, type, create_user, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sl_order_neg
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sl_order_neg
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.jdy.b2b.api.model.OrderNeg">
    insert into sl_order_neg (id, order_id, neg_order_id, neg_order_no,
      type, create_user, create_time
      )
    values (#{id,jdbcType=BIGINT}, #{orderId,jdbcType=BIGINT}, #{negOrderId,jdbcType=BIGINT},#{negOrderNo,jdbcType=VARCHAR},
      #{type,jdbcType=INTEGER}, #{createUser,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jdy.b2b.api.model.OrderNeg" useGeneratedKeys="true" keyProperty="id">
    insert into sl_order_neg
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="negOrderId != null">
        neg_order_id,
      </if>
      <if test="negOrderNo != null">
        neg_order_no,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="negOrderId != null">
        #{negOrderId,jdbcType=BIGINT},
      </if>
      <if test="negOrderNo != null">
        #{negOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jdy.b2b.api.model.OrderNeg">
    update sl_order_neg
    <set>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=BIGINT},
      </if>
      <if test="negOrderId != null">
        neg_order_id = #{negOrderId,jdbcType=BIGINT},
      </if>
      <if test="negOrderNo != null">
        neg_order_no = #{negOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jdy.b2b.api.model.OrderNeg">
    update sl_order_neg
    set order_id = #{orderId,jdbcType=BIGINT},
      neg_order_id = #{negOrderId,jdbcType=BIGINT},
      neg_order_no = #{negOrderNo,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      create_user = #{createUser,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>